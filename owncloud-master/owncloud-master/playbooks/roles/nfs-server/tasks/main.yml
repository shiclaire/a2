#-------------------------------------------------------------
# Mount the GCP SSD (format it as XFS)
#-------------------------------------------------------------

- name: add xfs support using xfsprogs package
  apt: name=xfsprogs

- name: check if the ssd is already mounted
  shell: mount | grep /dev/sdb
  ignore_errors: yes
  register: mounted

- name: format the ssd as xfs
  filesystem:
    fstype: xfs
    dev: /dev/sdb
    force: yes
  when: mounted is failed

- name: create network directory
  file:
    name: /share/
    state: directory

- name: mount the ssd
  mount:
    name: /share/
    src: /dev/sdb
    fstype: xfs
    state: mounted

#-------------------------------------------------------------
# Install glusterfs-server, and create a new volume on the
# mounted SSD.
#-------------------------------------------------------------

#- name: debug hostvars
#  debug: var=hostvars

- name: install gluster server
  apt: name=glusterfs-server

- name: enable & start gluster server
  systemd:
    name: glusterfs-server
    state: started
    enabled: yes

- name: create directories
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - /vars/www/owncloud
    - /share/bricks/data

# gluster_volume probes as well;
# https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/storage/glusterfs/gluster_volume.py
- name: create gluster volume
  gluster_volume:
    state: present
    name: owncloud
    bricks: /vars/www/owncloud,/share/bricks/data
    cluster: "{% for host in groups['nfs'] %}{{ hostvars[host]['ansible_default_ipv4']['address'] }},{% endfor %}"
    force: yes
  run_once: true

- name: start the new gluster volume
  gluster_volume:
    state: started
    name: owncloud
